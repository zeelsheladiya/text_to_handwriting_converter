# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets 
from PyQt5.QtWidgets import QMessageBox, QPushButton
import pywhatkit as kit
from pathlib import Path

def showdialog(message):
        msgBox = QMessageBox()
        msgBox.setWindowTitle = "warning!"
        msgBox.setText(message)
        msgBox.exec_()

class Ui_main_frame(object):

    def setupUi(self, main_frame):
        main_frame.setObjectName("main_frame")
        main_frame.resize(403, 227)
        self.btn_text_file = QtWidgets.QPushButton(main_frame)
        self.btn_text_file.setGeometry(QtCore.QRect(310, 50, 75, 24))
        self.btn_text_file.setObjectName("btn_text_file")
        self.txt_file = QtWidgets.QLineEdit(main_frame)
        self.txt_file.setGeometry(QtCore.QRect(10, 50, 291, 22))
        self.txt_file.setObjectName("txt_file")
        self.txt_file.setEnabled(False)
        self.txt_dest = QtWidgets.QLineEdit(main_frame)
        self.txt_dest.setGeometry(QtCore.QRect(10, 90, 291, 22))
        self.txt_dest.setObjectName("txt_dest")
        self.txt_dest.setEnabled(False)
        self.btn_dest = QtWidgets.QPushButton(main_frame)
        self.btn_dest.setGeometry(QtCore.QRect(310, 90, 75, 24))
        self.btn_dest.setObjectName("btn_dest")
        self.progressBar = QtWidgets.QProgressBar(main_frame)
        self.progressBar.setGeometry(QtCore.QRect(100, 130, 241, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.btn_convert = QtWidgets.QPushButton(main_frame)
        self.btn_convert.setGeometry(QtCore.QRect(170, 160, 75, 24))
        self.btn_convert.setObjectName("btn_convert")
        self.label = QtWidgets.QLabel(main_frame)
        self.label.setGeometry(QtCore.QRect(50, -20, 471, 81))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(main_frame)
        self.label_3.setGeometry(QtCore.QRect(10, 210, 381, 16))
        self.label_3.setObjectName("label_3")
        self.label_2 = QtWidgets.QLabel(main_frame)
        self.label_2.setGeometry(QtCore.QRect(10, 190, 391, 16))
        self.label_2.setObjectName("label_2")
        self.counter = 0
        self.file = ""
        self.folder = ""

        self.retranslateUi(main_frame)
        QtCore.QMetaObject.connectSlotsByName(main_frame)

        self.btn_text_file.clicked.connect(self.BrowseFile)
        self.btn_dest.clicked.connect(self.browsedest)
        self.btn_convert.clicked.connect(self.convert)

    def convert(self):
        
        if self.txt_file.text():
            
            if self.txt_dest.text():
                
                try:
                    self.progressBar.setValue(10)
                    self.progressBar.setValue(20)

                    #main logic
                    data = Path(self.file).read_text()

                    self.progressBar.setValue(30)
                    data = data.replace('\n', ' ')
                    data = data.strip()
                    self.progressBar.setValue(40)
                    self.progressBar.setValue(50)
                    self.folder += "/writing.png"
                    kit.text_to_handwriting(data,self.folder)
                    self.progressBar.setValue(50)
                    self.progressBar.setValue(80)
                    self.progressBar.setValue(100)

                    showdialog("process completed")
                    self.txt_dest.setText("")
                    self.txt_file.setText("")
                    self.progressBar.setValue(0)

                except :
                    showdialog("file access denied! Please go and change permissions")
                    self.txt_dest.setText("")
                    self.txt_file.setText("")
                    self.progressBar.setValue(0)


            else:
                showdialog("select folder for conversation")
                self.txt_dest.setText("")
                self.counter = 0 

        else:
            showdialog("select text file for conversation")
            self.txt_file.setText("")
            self.counter = 0

        pass

    def browsedest(self):
        foldername  = str(QtWidgets.QFileDialog.getExistingDirectory(main_frame, "Select Directory"))
        self.txt_dest.setText(foldername)
        self.folder = self.txt_dest.text()
        if self.folder:
            self.counter += 1
        else:
            showdialog("Select proper destination folder please")
            self.txt_dest.setText("")
            self.counter = 0


    def BrowseFile(self):
        filename , _ = QtWidgets.QFileDialog.getOpenFileName(None,"Select PDF File","","File type  (*.txt)")
        self.txt_file.setText(filename)
        self.file = self.txt_file.text()
        if self.file:
            file = open(self.file,'rb')
            self.counter += 1
        else:
            showdialog("Select proper text file please")
            self.txt_file.setText("")
            self.counter = 0
            
    def retranslateUi(self, main_frame):
        _translate = QtCore.QCoreApplication.translate
        main_frame.setWindowTitle(_translate("main_frame", "Zeelubha\'s Converter"))
        self.btn_text_file.setText(_translate("main_frame", "Browse"))
        self.btn_dest.setText(_translate("main_frame", "Browse"))
        self.btn_convert.setText(_translate("main_frame", "Convert"))
        self.label.setText(_translate("main_frame", "Zeelubha\'s Text To Handwriting Converter"))
        self.label_3.setText(_translate("main_frame", "and want to make any changes in it feel free to go in source and do change."))
        self.label_2.setText(_translate("main_frame", "note : this program has some limit of words to convert text to hand writing"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    main_frame = QtWidgets.QFrame()
    ui = Ui_main_frame()
    ui.setupUi(main_frame)
    main_frame.show()
    sys.exit(app.exec_())
